{"version":3,"sources":["components/Statistics/Statistics.module.scss","components/FeedbackOptions/FeedbackOptions.module.scss","components/Section/Section.module.scss","components/Container/Container.module.scss","components/Notification/Notification.module.scss","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Container/Container.js","components/Notification/Notification.js","components/App/App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","wrapper","map","option","feedbackButton","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","list","item","itemSpan","Section","title","children","section","Container","Notification","message","notification","App","state","leaveFeedback","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","this","positiveFeedBack","isFeedBack","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,+B,kBCA7DD,EAAOC,QAAU,CAAC,OAAS,gCAAgC,eAAiB,wCAAwC,QAAU,mC,gBCA9HD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,oBCA7DD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,aAAe,qC,4KC4BlBC,EA1BS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKC,UAAWC,IAAEC,QAAlB,SACGJ,EAAQK,KAAI,SAACC,GAAD,OACX,wBACEJ,UAAWC,IAAEI,eAEbC,KAAK,SACLC,QAAS,kBAAMR,EAAgBK,IAJjC,SAMGA,GAJIA,S,gBCwBEI,EA7BI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAIb,UAAWC,IAAEa,KAAjB,UACE,qBAAId,UAAWC,IAAEc,KAAjB,UACE,sBAAMf,UAAWC,IAAEe,SAAnB,mBADF,IAC6CP,KAE7C,qBAAIT,UAAWC,IAAEc,KAAjB,UACE,sBAAMf,UAAWC,IAAEe,SAAnB,sBADF,IACgDN,KAEhD,qBAAIV,UAAWC,IAAEc,KAAjB,UACE,sBAAMf,UAAWC,IAAEe,SAAnB,kBADF,IAC4CL,KAE5C,qBAAIX,UAAWC,IAAEc,KAAjB,UACE,sBAAMf,UAAWC,IAAEe,SAAnB,oBADF,IAC8CJ,KAE9C,qBAAIZ,UAAWC,IAAEc,KAAjB,UACE,sBAAMf,UAAWC,IAAEe,SAAnB,gCACCH,EAFH,W,gBCFWI,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,sBAAKnB,UAAWC,IAAEmB,QAAlB,UACE,oBAAIpB,UAAWC,IAAEiB,MAAjB,SAAyBA,IACxBC,M,iBCKUE,EARG,SAAC,GAAD,IAAGF,EAAH,EAAGA,SAAH,OAChB,qBAAKnB,UAAWC,IAAEoB,UAAlB,SAA8BF,K,iBCOjBG,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGvB,UAAWC,IAAEuB,aAAhB,SAA+BD,KCyDlBE,EAtDf,4MACEC,MAAQ,CACNjB,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAMEgB,cAAgB,SAACvB,GACf,EAAKwB,UAAS,SAACC,GAAD,sBAAmBzB,EAASyB,EAAUzB,GAAU,OAPlE,EAUE0B,mBAAqB,WACnB,MAA+B,EAAKJ,MAEpC,OAFA,EAAQjB,KAAR,EAAcC,QAAd,EAAuBC,KAX3B,EAgBEoB,gCAAkC,WAChC,MAA+B,EAAKL,MAA5BjB,EAAR,EAAQA,KAGR,OAD0BA,GADJA,EADtB,EAAcC,QAAd,EAAuBC,KAE2B,KAC1BqB,WApB5B,4CAuBE,WACE,MAA+BC,KAAKP,MAA5BjB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQqB,KAAKH,qBACbI,EAAmBD,KAAKF,kCACxBI,EAAa1B,EAAO,GAAKC,EAAU,GAAKC,EAAM,EACpD,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASO,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEpB,QAASsC,OAAOC,KAAKJ,KAAKP,OAC1B3B,gBAAiBkC,KAAKN,kBAG1B,cAAC,EAAD,CAAST,MAAO,aAAhB,SACGiB,EACC,cAAC,EAAD,CACE1B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBqB,IAGtB,cAAC,EAAD,CAAcX,QAAS,+BA9CnC,GAAyBe,aCDzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.663059dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__1WXe2\",\"itemSpan\":\"Statistics_itemSpan__Usezs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__caVem\",\"feedbackButton\":\"FeedbackOptions_feedbackButton__AmW4c\",\"wrapper\":\"FeedbackOptions_wrapper__3Ddwn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__15Bbx\",\"title\":\"Section_title__3q4Au\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__7zF89\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3D1M9\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.scss\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className={s.wrapper}>\r\n    {options.map((option) => (\r\n      <button\r\n        className={s.feedbackButton}\r\n        key={option}\r\n        type=\"button\"\r\n        onClick={() => onLeaveFeedback(option)}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      good: PropTypes.string,\r\n      neutral: PropTypes.string,\r\n      bad: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.scss\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <ul className={s.list}>\r\n    <li className={s.item}>\r\n      <span className={s.itemSpan}>Good:</span> {good}\r\n    </li>\r\n    <li className={s.item}>\r\n      <span className={s.itemSpan}>Neutral:</span> {neutral}\r\n    </li>\r\n    <li className={s.item}>\r\n      <span className={s.itemSpan}>Bad:</span> {bad}\r\n    </li>\r\n    <li className={s.item}>\r\n      <span className={s.itemSpan}>Total:</span> {total}\r\n    </li>\r\n    <li className={s.item}>\r\n      <span className={s.itemSpan}>Positive feedback:</span>\r\n      {positivePercentage}%\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.scss\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div className={s.section}>\r\n    <h2 className={s.title}>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.scss\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.Container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import s from \"./Notification.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={s.notification}>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"../Statistics/Statistics\";\nimport Section from \"../Section/Section\";\nimport Container from \"../Container/Container\";\nimport Notification from \"../Notification/Notification\";\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  leaveFeedback = (option) => {\n    this.setState((prevState) => ({ [option]: prevState[option] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = good + neutral + bad;\n    return totalFeedback;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = good + neutral + bad;\n    const positiveFeedBack = (good / totalFeedback) * 100;\n    return positiveFeedBack.toFixed();\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positiveFeedBack = this.countPositiveFeedbackPercentage();\n    const isFeedBack = good > 0 || neutral > 0 || bad > 0;\n    return (\n      <Container>\n        <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.leaveFeedback}\n          />\n        </Section>\n        <Section title={\"Statistics\"}>\n          {isFeedBack ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positiveFeedBack}\n            />\n          ) : (\n            <Notification message={\"No feedback given\"} />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles/base.module.scss\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}